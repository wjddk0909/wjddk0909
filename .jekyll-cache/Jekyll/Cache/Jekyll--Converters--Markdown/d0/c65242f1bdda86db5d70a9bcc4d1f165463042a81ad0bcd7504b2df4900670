I"`#<h2 id="121-싱글-파일-컴포넌트에-배운-내용-적용하여-개발-시작하기">12.1 싱글 파일 컴포넌트에 배운 내용 적용하여 개발 시작하기</h2>

<p>cli로 생성한 프로젝트에서 어떤식으로 개발을 시작해야 하는지 살펴보겠습니다.</p>

<p>파일을 정리해보겠습니다.<br />
우선 HelloWorld.vue를 삭제합니다.</p>

<p><code class="language-plaintext highlighter-rouge">App.vue</code>도 전체를 지우고 저장한 후에 <code class="language-plaintext highlighter-rouge">vue</code>를 입력해서 자동완성을 합니다.<br />
<code class="language-plaintext highlighter-rouge">template</code>에서 <code class="language-plaintext highlighter-rouge">div</code>태그를 만들어줍니다.  여기서 주의할 점은 가장 상위 태그는 하나여야한다는 것입니다.</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div&gt;</span>
    
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div&gt;</span>
    
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이런식으로 최상단에 태그가 여러개가 나열되면 에러가 뜹니다.</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div&gt;</span>
        <span class="nt">&lt;div&gt;</span>
        
        <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;div&gt;</span>
        
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 최상단에는 하나의 태그로 묶어주고 그 안에서 여러개의 태그를 넣어야 합니다.
template안에 Root는 한개 요소여야합니다.</p>

<p>div안에 app이라고 입력하고 화면을 확인해봅시다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner12_1.png" alt="vue" /></p>

<p>화면에서 app이 뜨는것을 볼 수 있고 vue의 Root에 컴포넌트가 뜹니다.</p>

<p>이번에는 app대신 hi라는 텍스트를 vue data에서 정의를 하고 데이터 바인딩으로 엮어보겠습니다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner12_2.png" alt="vue" /></p>

<p>script부분에 <code class="language-plaintext highlighter-rouge">data:{}</code>를 입력하면 빨간줄이 가는것이 보입니다.<br />
여태까지는 <code class="language-plaintext highlighter-rouge">new Vue({})</code>안에 data를 선언해서 했는데 cli를 통해서 .vue파일에서는 여러개의 컴포넌트에서 동일한 값을 참조하면 안됩니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="na">data</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">{</span>
            <span class="na">str</span><span class="p">:</span> <span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 함수를 연결하고 <code class="language-plaintext highlighter-rouge">return</code>을 새객체를 반환해주는 형식으로 사용해야합니다.</p>

<h2 id="122-싱글-파일-컴포넌트-체계에서-컴포넌트-등록하기">12.2 싱글 파일 컴포넌트 체계에서 컴포넌트 등록하기</h2>

<p>App.vue파일에서 별도의 컴포넌트를 등록해서 그 컴포넌트로 하위 컴포넌트의 <code class="language-plaintext highlighter-rouge">props</code>와 <code class="language-plaintext highlighter-rouge">event</code>를 주고받아보겠습니다.<br />
src 폴더밑에 components안에 AppHeader.vue를 생성합니다.</p>

<p>AppHeader.vue에 코드를 작성합니다.</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
    <span class="nt">&lt;header&gt;</span>
        <span class="nt">&lt;h1&gt;</span>Header<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;/header&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
    
<span class="p">};</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">style</span> <span class="na">lang=</span><span class="s">"scss"</span> <span class="na">scoped</span><span class="nt">&gt;</span>

<span class="nt">&lt;/</span><span class="k">style</span><span class="nt">&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 App.vue로 돌아와서 컴포넌트를 등록해봅시다.<br />
<code class="language-plaintext highlighter-rouge">script</code> 안에 <code class="language-plaintext highlighter-rouge">import</code>를 이용해서 불러옵니다.</p>

<p>컴포넌트를 등록할때는 <code class="language-plaintext highlighter-rouge">components</code>로 등록합니다.<br />
등록한 컴포넌트는 <code class="language-plaintext highlighter-rouge">template</code>안에서 불러옵니다.</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;app-header&gt;&lt;/app-header&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">import</span> <span class="nx">AppHeader</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./components/AppHeader.vue</span><span class="dl">'</span>
<span class="c1">// new Vue({</span>
<span class="c1">//   data: {</span>
<span class="c1">//     str: 'hi'</span>
<span class="c1">//   }</span>
<span class="c1">// })</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">data</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">str</span><span class="p">:</span> <span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span>
    <span class="p">};</span>
  <span class="p">},</span>
  <span class="na">components</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">'</span><span class="s1">app-header</span><span class="dl">'</span><span class="p">:</span> <span class="nx">AppHeader</span>
  <span class="p">}</span>
<span class="p">};</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">style</span> <span class="na">lang=</span><span class="s">"scss"</span> <span class="na">scoped</span><span class="nt">&gt;</span>

<span class="nt">&lt;/</span><span class="k">style</span><span class="nt">&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="122-싱글-파일-컴포넌트에서-props-속성-사용하는-방법">12.2 싱글 파일 컴포넌트에서 props 속성 사용하는 방법</h2>
:ET
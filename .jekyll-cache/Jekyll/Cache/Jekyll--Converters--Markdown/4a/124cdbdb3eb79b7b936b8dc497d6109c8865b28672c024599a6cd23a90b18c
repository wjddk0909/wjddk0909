I"<h2 id="11-변수">1.1 변수</h2>

<ul>
  <li>variable : 값을 저장하는 영역</li>
  <li>변수에 저장된 값의 재사용</li>
</ul>

<p>변수 선언 방법</p>
<blockquote>
  <p>var book = ‘책’<br />
var book = ‘책’, point = 123;</p>
</blockquote>

<h2 id="12-상수-진수">1.2 상수, 진수</h2>

<p>상수</p>
<ul>
  <li>값을 변경할 수 없는 값</li>
  <li>상수 변수: 상수가 설정된 변수
    <ul>
      <li>js는 변수의 값을 변경할 수 있으므로 상수 변수는 선언적 의미</li>
    </ul>
  </li>
  <li>코딩 관례로 영문 대문자 사용</li>
  <li>var ONE = 1;</li>
  <li>상수로 사용한다는 시맨틱 선언</li>
</ul>

<h2 id="13-데이터-타입data-type">1.3 데이터 타입(Data Type)</h2>

<ul>
  <li>숫자 타입: 123</li>
  <li>문자 타입: ‘sports’</li>
</ul>

<p>typeof 연산자</p>
<ul>
  <li>데이터(값) 타입 반환</li>
  <li>typeof value에 데이터를 작성</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">point</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">point</span><span class="p">);</span> <span class="c1">// number</span>

<span class="kd">var</span> <span class="nx">book</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">책</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">book</span><span class="p">);</span> <span class="c1">// string</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>키워드(Keywork)</p>
<ul>
  <li>특별한 기능을 가진 단어</li>
</ul>

<p>데이터 타입(자료형)</p>
<ul>
  <li>데이터는 타입을 가짐</li>
  <li>js는 데이터를 기준으로 타입을 결정</li>
  <li>타입을 먼저 선언하고 타입에 맞는 데이터를 할당하지 않음</li>
</ul>

<h2 id="14-number-타입-string-타입">1.4 Number 타입, String 타입</h2>

<p>Number타입</p>
<ul>
  <li>Number타입의 특수한 3개 값
    <ul>
      <li>NaN: Not-a-Number</li>
      <li>Infinity 양수 무한대</li>
      <li>-Infinity 음수 무한대</li>
    </ul>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">point</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="dl">'</span><span class="s1">A</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">point</span><span class="p">);</span> <span class="c1">// NaN</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="15-undefined-null-타입">1.5 Undefined, Null 타입</h2>

<p>Undefined(대문자)타입</p>
<ul>
  <li>값: undifined(소문자)</li>
</ul>

<p>변수의 디폴트 값</p>
<ul>
  <li>var point;</li>
  <li>변수를 선언만 한 것으로 undefined가 초기값으로 설정</li>
  <li>변수에 값을 할당하지 않은 것을 나타내는 시맨틱</li>
</ul>

<p>변수에 undefined 할당 가능</p>

<p>Null(대문자)타입</p>
<ul>
  <li>값: null(소문자)</li>
</ul>

<p>null과 undefined 차이</p>
<ul>
  <li>undefined는 단지 변수만 선언</li>
  <li>null을 할당해야 값이 null이 됨</li>
  <li>의도적으로 값을 할당한 것으로 코드를 수행한 것이 된다.</li>
</ul>

<h2 id="16-boolean-타입-object-타입">1.6 Boolean 타입, Object 타입</h2>

<p>Object 형태</p>
<ul>
  <li>{name: value} 형태</li>
</ul>

<p>프로퍼티(Property)</p>
<ul>
  <li>name과 value 하나를 지칭</li>
  <li>Object는 프로퍼티 집합</li>
</ul>

:ET
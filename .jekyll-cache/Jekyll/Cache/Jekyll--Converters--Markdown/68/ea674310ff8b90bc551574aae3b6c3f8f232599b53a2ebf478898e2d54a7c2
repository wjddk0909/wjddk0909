I"<<h2 id="101-watch-속성">10.1 watch 속성</h2>

<p>인스턴스를 생성하고 num속성을 추가합니다.<br />
이 num을 button을 클릭했을때 1씩 증가 시켜보겠습니다.</p>

<p>메소드에 <code class="language-plaintext highlighter-rouge">addNum</code>을 정의하고 버튼에 <code class="language-plaintext highlighter-rouge">v-on:click</code>으로 연결해줍니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
    
    <span class="nt">&lt;button</span> <span class="na">v-on:click=</span><span class="s">"addNum"</span><span class="nt">&gt;</span>increase<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;script&gt;</span>
    <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
        <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">num</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">addNum</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">num</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">})</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>화면에서 버튼을 누르면 누를때마다 숫자가 증가합니다.<br />
여기에 추가로 증가할때마다 콘솔을 찍어보겠습니다.<br />
그러면 data의 변화에 따라서 특정 로직을 실행하는 watch를 이용해보겠습니다.<br />
메소드에 logText를 추가해주고 이것을 watch에 num이 변화했을때 logText를 실행하도록 연결해줍니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
    
    <span class="nt">&lt;button</span> <span class="na">v-on:click=</span><span class="s">"addNum"</span><span class="nt">&gt;</span>increase<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;script&gt;</span>
    <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
        <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">num</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">watch</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">num</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">logText</span><span class="p">();</span>   
            <span class="p">}</span>
        <span class="p">},</span>
        <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">addNum</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">num</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="p">},</span>
            <span class="na">logText</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">changed</span><span class="dl">'</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">})</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>화면에서 확인해보면 버튼을 누를때마다 콘솔창이 찍힙니다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner10_1.png" alt="watch" /></p>

<h2 id="102-watch-속성-vs-computed-속성">10.2 watch 속성 vs computed 속성</h2>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
    
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
    <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
        <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">num</span><span class="p">:</span> <span class="mi">10</span>
        <span class="p">},</span>
        <span class="na">computed</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">doubleNum</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">num</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">},</span>
        <span class="na">watch</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">num</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">newValue</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">fetchUserByNumber</span><span class="p">(</span><span class="nx">newValue</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">},</span>
        <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">fetchUserByNumber</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">})</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>data의 num에 10이라는 값이 할당되어 있습니다.</li>
  <li>computed에는 <code class="language-plaintext highlighter-rouge">doubleNum</code>이라는 함수가 정의되어 있고, 이 함수는 data의 num이라는 속성에 두배의 값을 return합니다.  자연스럽게 vue 내부적으로 계속 계산을 하는 속성이라고 생각하면 됩니다.  기본적으로 data의 의존성(위 doubleNum로직이 실행될 때, 기준이 되는 값이 data의 num값)을 가지고 이 값이 변할 때 마다 computed의 doubleNum이 실행되고 계산됩니다.</li>
  <li>watch는 computed와 굉장히 비슷한 느낌인데 watch의 경우도 data의 num이 바뀌었을 때 특정 로직을 실행하기 때문에 computed와 차이가 없어 보입니다.</li>
</ol>

<h3 id="computed">computed</h3>
<p>computed같은 경우는 단순한 값에 대한 계산, 특히 <code class="language-plaintext highlighter-rouge">validation vue라이브러리</code>가 있는데 그 내부적으로 구현되어 있는 것들이 computed 속성으로 되어있습니다.<br />
단순한 텍스트 입력을 받아서 거기에 대한 값을 계산하는 것은 computed를 많이 사용합니다.</p>

<h3 id="watch">watch</h3>
<p>watch같은 경우는 실제로 무거운 로직들, 매번 실행되기엔 부담스러운 로직입니다.<br />
예를 들어서 data의 num값이 수정되었을 때 <code class="language-plaintext highlighter-rouge">this.fetchUserByNumber()</code>가 실행되도록 했는데 브라우저에서 num 값을 증가 시키면 콘솔창에 11이 찍힙니다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner10_2.png" alt="watch" /></p>

<p>이 부분이 watch에 설정한 함수입니다.</p>

<p>watch의 함수들은 기본적으로 두가지 인자를 받습니다.</p>
<ul>
  <li>첫번째 newValue : 갱신된 값</li>
  <li>두번째 oldValue : 이전값</li>
</ul>

<p><img src="/assets/images/vue/vue-lv1/beginner10_3.png" alt="watch" /></p>

<p>watch는 계속 값의 변화를 추적하고 있기 때문에 이전값과 갱신된 값을 인자로 받습니다.</p>

<p>그래서 새로 갱신된 값을 <code class="language-plaintext highlighter-rouge">fetchUserByNumber</code>의 인자로 넘기고 이 함수에서 인자값을 받아서 콘솔에 찍은겁니다.</p>

<h3 id="공식문서-결론">공식문서 결론</h3>

<p><img src="/assets/images/vue/vue-lv1/beginner10_4.png" alt="watch" /></p>

<p>공식문서에서도 웬만하면 computed를 사용하고 watch보다는 computed가 대부분의 케이스에 적합하다고 되어있습니다.<br />
실제로 서비스를 구현할때도 computed로 충분히 가능한데 watch를 사용하면 코드가 지저분해지고 computed가 이미 캐싱이나 이런 내부적인 튜닝이 많이 되어있기때문에 computed를 통해서 값들을 계산하는 것을 추천드립니다.</p>

<h2 id="103-computed-속성을-이용한-클래스-코드-작성-방법">10.3 computed 속성을 이용한 클래스 코드 작성 방법</h2>

<p>computed를 이용한 직관적인 코드 작성과 클래스 바인딩에 대해 알아보겠습니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;style&gt;</span>
        <span class="nc">.warning</span> <span class="p">{</span>
            <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;p</span> <span class="na">v-bind:class=</span><span class="s">"errorTextColor"</span><span class="nt">&gt;</span>Hello<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script&gt;</span>
        <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
            <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
            <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
                <span class="c1">// cname: 'blue-text',</span>
                <span class="na">isError</span><span class="p">:</span> <span class="kc">false</span>
            <span class="p">},</span>
            <span class="na">computed</span><span class="p">:</span> <span class="p">{</span>
                <span class="na">errorTextColor</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">isError</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">warning</span><span class="dl">'</span> <span class="p">:</span> <span class="kc">null</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">})</span>
    <span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 코드를 작성하면 템플릿상에서 <code class="language-plaintext highlighter-rouge">{ warning: isError }</code>를 넣을 필요 없이 인스턴스안에 깔끔하게 정리 할 수 있습니다.</p>

:ET
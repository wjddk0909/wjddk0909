I"YS<h2 id="121-프로젝트-소개">12.1 프로젝트 소개</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
</pre></td><td class="rouge-code"><pre><span class="kr">interface</span> <span class="nx">PhoneNumberDictionary</span> <span class="p">{</span>
  <span class="p">[</span><span class="nx">phone</span><span class="p">:</span> <span class="nx">string</span><span class="p">]:</span> <span class="p">{</span>
    <span class="nl">num</span><span class="p">:</span> <span class="nx">number</span><span class="p">;</span>
  <span class="p">};</span>
<span class="p">}</span>

<span class="kr">interface</span> <span class="nx">Contact</span> <span class="p">{</span>
  <span class="nl">name</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">address</span><span class="p">:</span> <span class="nx">string</span><span class="p">;</span>
  <span class="nl">phones</span><span class="p">:</span> <span class="nx">PhoneNumberDictionary</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// api</span>
<span class="c1">// TODO: 아래 함수의 반환 타입을 지정해보세요.</span>
<span class="kd">function</span> <span class="nx">fetchContacts</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// TODO: 아래 변수의 타입을 지정해보세요.</span>
  <span class="kd">const</span> <span class="nx">contacts</span> <span class="o">=</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Tony</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">address</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Malibu</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">phones</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">home</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">num</span><span class="p">:</span> <span class="mi">11122223333</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">office</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">num</span><span class="p">:</span> <span class="mi">44455556666</span><span class="p">,</span>
        <span class="p">},</span>
      <span class="p">},</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Banner</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">address</span><span class="p">:</span> <span class="dl">'</span><span class="s1">New York</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">phones</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">home</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">num</span><span class="p">:</span> <span class="mi">77788889999</span><span class="p">,</span>
        <span class="p">},</span>
      <span class="p">},</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">마동석</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">address</span><span class="p">:</span> <span class="dl">'</span><span class="s1">서울시 강남구</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">phones</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">home</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">num</span><span class="p">:</span> <span class="mi">213423452</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">studio</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">num</span><span class="p">:</span> <span class="mi">314882045</span><span class="p">,</span>
        <span class="p">},</span>
      <span class="p">},</span>
    <span class="p">},</span>
  <span class="p">];</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="nx">resolve</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nx">resolve</span><span class="p">(</span><span class="nx">contacts</span><span class="p">),</span> <span class="mi">2000</span><span class="p">);</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="c1">// main</span>
<span class="kd">class</span> <span class="nx">AddressBook</span> <span class="p">{</span>
  <span class="c1">// TODO: 아래 변수의 타입을 지정해보세요.</span>
  <span class="nx">contacts</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="kd">constructor</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">fetchData</span><span class="p">();</span>
  <span class="p">}</span>

  <span class="nx">fetchData</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">fetchContacts</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span> <span class="o">=</span> <span class="nx">response</span><span class="p">;</span>
    <span class="p">});</span>
  <span class="p">}</span>

  <span class="cm">/* TODO: 아래 함수들의 파라미터 타입과 반환 타입을 지정해보세요 */</span>
  <span class="nx">findContactByName</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">contact</span> <span class="o">=&gt;</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="nx">name</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">findContactByAddress</span><span class="p">(</span><span class="nx">address</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">contact</span> <span class="o">=&gt;</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">address</span> <span class="o">===</span> <span class="nx">address</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">findContactByPhone</span><span class="p">(</span><span class="nx">phoneNumber</span><span class="p">,</span> <span class="nx">phoneType</span><span class="p">:</span> <span class="nx">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span>
      <span class="nx">contact</span> <span class="o">=&gt;</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">phones</span><span class="p">[</span><span class="nx">phoneType</span><span class="p">].</span><span class="nx">num</span> <span class="o">===</span> <span class="nx">phoneNumber</span>
    <span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">addContact</span><span class="p">(</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">contact</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">displayListByName</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">contact</span> <span class="o">=&gt;</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">displayListByAddress</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">contact</span> <span class="o">=&gt;</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">address</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="cm">/* ------------------------------------------------ */</span>
<span class="p">}</span>

<span class="k">new</span> <span class="nx">AddressBook</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="122-프로젝트-실습-방법-안내">12.2 프로젝트 실습 방법 안내</h2>

<ol>
  <li>tsconfig.json 파일에서 noImplicitAny 옵션값을 true로 설정, 
strict 옵션도 true로 설정하고, strictFunctionTypes”: true도 추가.</li>
</ol>

<p>위와 같이 true로 바꾸는 순간 타입을 지정하지 않은 것들에 대해 추론과정에서 에러로 간주한다.<br />
strict 또한 true라 훨씬 더 많은 error 가 발생한다는 것을 볼 수 있다.<br />
strictFunctionTypes”: true 이것도 설정해서 더 많은 것들이 error 로 잡히는 것을 볼 수 있다.</p>

<ol>
  <li>
    <p>.eslintrc.js 파일에서 @typescript-eslint/no-explicit-any와 @typescript-eslint/explicit-function-return-type를 주석처리 하면 반환 타입이 없다는 에러들이 많이 잡힌다.<br />
이렇게 <code class="language-plaintext highlighter-rouge">lint</code>를 어떻게 설정하냐에 따라 고민할 부분이 많아진다.</p>
  </li>
  <li>
    <p>endOfLine: ‘auto’ : 코드의 개행부분에 에러가 잡히면 eslintrc에 넣어준다.</p>
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nx">rules</span><span class="p">:</span> <span class="p">{</span>
 <span class="dl">'</span><span class="s1">prettier/prettier</span><span class="dl">'</span><span class="p">:</span> <span class="p">[</span>
   <span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span>
   <span class="p">{</span>
     <span class="na">singleQuote</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
     <span class="na">semi</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
     <span class="na">useTabs</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
     <span class="na">tabWidth</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
     <span class="na">printWidth</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span>
     <span class="na">bracketSpacing</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
     <span class="na">arrowParens</span><span class="p">:</span> <span class="dl">'</span><span class="s1">avoid</span><span class="dl">'</span><span class="p">,</span>
     <span class="na">endOfLine</span><span class="p">:</span> <span class="dl">'</span><span class="s1">auto</span><span class="dl">'</span>
   <span class="p">},</span>
 <span class="p">],</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ol>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/c9af028751fd556c17ff65b04b47a12475588878">diff check</a></p>
</blockquote>

<h2 id="123-애플리케이션에-정의된-타입-설명-및-api-함수-타입-정의-힌트">12.3 애플리케이션에 정의된 타입 설명 및 API 함수 타입 정의 힌트</h2>

<p>함수 <code class="language-plaintext highlighter-rouge">function fetchContacts()</code>의 반환값을 보면 <code class="language-plaintext highlighter-rouge">new Promise</code>를 반환하기 때문에 <code class="language-plaintext highlighter-rouge">function fetchContacts(): Prommise</code>로 반환 타입을 지정해 주면 에러가 뜨고 프리뷰를 확인 해 보면 설명에 제네릭이 뜬다. 이유가 뭘까?</p>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/505b61fcafa91719c3cfa1f41ce690ea6e570f0f">diff check</a></p>
</blockquote>

<h2 id="124-promise를-이용한-api-함수-타입-정의">12.4 Promise를 이용한 API 함수 타입 정의</h2>

<p><img src="/assets/images/ts/part1-12_01.jpg" alt="타입정의" /></p>

<p>함수의 반환값 카입을 정의하지 않았지만 반환값이 string[]타입일거라고 추론하고 있다.<br />
함수내부의 코드를 보고 <code class="language-plaintext highlighter-rouge">return items</code> 부분의 items가 string[] 타입이란 것을 알 수 있기 떄문이다.</p>

<p><img src="/assets/images/ts/part1-12_02.jpg" alt="타입정의" /></p>

<p>서버에서 데이터를 받아오는 상황이라 가정하고 Promise 비동기 상황으로 코드를 짜면, 위와같이 추론괒어을 거친 반환값 타입이 <code class="language-plaintext highlighter-rouge">Promise&gt;unknown&gt;</code>이다.<br />
그러니까 위 코드처럼 <code class="language-plaintext highlighter-rouge">new Promise</code>를 반환하게 되면 추론과정에서 Promise 인스턴스를 반환하는건 알지만 그 안에서 반환하는 게 무슨 타입인지 모른다는 것이다.<br />
즉, 타입스크립트가 Promise 인스턴스안에 들어오는 코드에 대해선 알 수가 없다는 것이다.</p>

<p><img src="/assets/images/ts/part1-12_03.jpg" alt="타입정의" /></p>

<p>Promise타입에 대해 보면 타입스크립트 내부적으로 어떤것들을 정의했는지 볼 수있다.<br />
<code class="language-plaintext highlighter-rouge">Promise&lt;unknown&gt;</code>프로미스를 통해서 반환받을 값의 타입까지 정확히 명시를 해야한다는 것이다.<br />
Promise가 기본적으로 제네릭을 통해 정의가 되고있기 떄문이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">fetchItems</span><span class="p">():</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">string</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="na">items</span><span class="p">:</span> <span class="nx">string</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">b</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">c</span><span class="dl">'</span><span class="p">];</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">resolve</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">resolve</span><span class="p">(</span><span class="nx">items</span><span class="p">);</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="nx">fetchItems</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>실제 서비스에서는 위와 같은 목업 코드말고 axios와 같은 Promise 객체 기반 라이브러리를 통해 코드를 작성할 것이다.<br />
그럴때 위와 같은 타입을 정의해 주면 된다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">fetchItems</span><span class="p">():</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">number</span><span class="p">[]</span><span class="o">&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="na">items</span><span class="p">:</span> <span class="nx">string</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">b</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">c</span><span class="dl">'</span><span class="p">];</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">resolve</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">resolve</span><span class="p">(</span><span class="nx">items</span><span class="p">);</span> <span class="c1">// error: 왼쪽 item은 number로 이루어진 배열이되어야하는데 현재 추론과정에선 string으로 이루어진 배열이므로 에러가 발생한다.</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="nx">fetchItems</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/12a48d6375044900fd70d5fa9a20687af0e45458">diff check</a></p>
</blockquote>

<h2 id="125-전화번호부-클래스-전언부-타입-정의">12.5 전화번호부 클래스 전언부 타입 정의</h2>

<p>클래스를 보면 기본적으로 클래스안에 사용될 변수, 속성에 대해서 구체적으로 정의할 수 있다.</p>

<p>contacts = []; -&gt; contacts: Contact[] = [];</p>

<p>여기에 정의해주기 전에는 밑에 fetchData 안에 <code class="language-plaintext highlighter-rouge">this.contacts = response;</code>부분에 에러가 잡히던 부분이 정의해 주면서 에러가 사라진다.</p>

<p>constructor는 기본적으로 따로 타입 선언 안해도 된다.</p>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/31ed9427c3b1224dd218f157b8ff290faddc10d1">diff check</a></p>
</blockquote>

<h2 id="126-전화번호부-검색-메서드의-타입-정의">12.6 전화번호부 검색 메서드의 타입 정의</h2>

<p><code class="language-plaintext highlighter-rouge">return this.contacts.filter(contact =&gt; contact.name === name);</code><br />
filter기 때문에 리턴값은 배열을 반환한다.</p>

<p>폰넘버는 이넘으로 정의해볼 수 있다.</p>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/3ea58c187c48776775462e5dc51a505ce485307e">diff check</a></p>
</blockquote>

<h2 id="127-이넘을-이용한-타입-정의">12.7 이넘을 이용한 타입 정의</h2>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/3b7c5a6c30744d4134223cfdd81c6adc842254c1">diff check</a></p>
</blockquote>

<h2 id="128-주요-메서드조회-타입-정의-및-실습-마무리">12.8 주요 메서드(조회) 타입 정의 및 실습 마무리</h2>

<p>map -&gt; 기존 배열을 변환을 해서 새로운 배열을 만들어주는 함수라고 보면 된다.</p>

<p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map">MDN Array map90 API 문서</a></p>

<blockquote>
  <p><a href="https://github.com/wjddk0909/typescript-part1/commit/a3ab3d5955a31bb93c1d3e092252801a726e4f0f">diff check</a></p>
</blockquote>

:ET
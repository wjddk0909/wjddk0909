I"W<h2 id="렉시컬-스코프란">렉시컬 스코프란?</h2>

<p>함수를 어디서 호출하는지가 아니라 어디에(어디서) <code class="language-plaintext highlighter-rouge">선언하였는지에 따라 결정되는 것</code>을 말한다.</p>

<p>즉, 함수를 어디서 선언하였는지에 따라 상위 스코프를 결정한다는 뜻이며, 가장 중요한 점은 함수의 선언에 따라 결정되는 점이다.</p>

<p>다른 말로 <code class="language-plaintext highlighter-rouge">정적 스코프(Static scope)</code>라고 한다.</p>

<p>예시 코드를 보고 어떻게 동작하는지 확인해보자</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// global</span>

<span class="kd">function</span> <span class="nx">first</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="nx">second</span><span class="p">();</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">second</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">first</span><span class="p">();</span>
<span class="nx">second</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>결과는 10, 1이 출력될 거라고 생각하기 쉽지만 실제 결과는 1, 1 이 두번 출력된다.</p>

<p>이유는?<br />
자바스크립트에서 코드를 작성할때, 이미 실행 단계에서 코드들의 스코프를 결정한다.</p>
<ul>
  <li>global 범위에 있는 변수 <code class="language-plaintext highlighter-rouge">a</code></li>
  <li>first() 함수 안에 있는 변수 <code class="language-plaintext highlighter-rouge">a</code></li>
  <li>second() 함수 안에 있는 변수 <code class="language-plaintext highlighter-rouge">a</code></li>
</ul>

<p>second()의 상위 스코프가 무엇인지에 따라 결정된다.<br />
자바스크립트는 렉시컬 스코프(Lexical Scope)를 따르므로 함수를 선언한 시점에 이미 상위 스코프가 결정된다.<br />
즉, 이말은 함수를 어디서 호출하였는지는 스코프 결정에 아무런 의미를 주지 않는다는 말이다.<br />
그렇기 때문에 second() 함수가 <code class="language-plaintext highlighter-rouge">first() 함수 안에서 호출</code> 된 것과 상관없이 second()함수는 <code class="language-plaintext highlighter-rouge">global 범위에 선언</code>되어 있으므로 global 범위에 있는 변수 a의 값이 두번 출력된 것이다.</p>
:ET
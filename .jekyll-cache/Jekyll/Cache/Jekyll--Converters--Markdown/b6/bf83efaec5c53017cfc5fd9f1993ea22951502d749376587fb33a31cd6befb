I"t<h2 id="81-modules">8.1 Modules</h2>

<p>자바스크립트 모듈화 방법</p>
<ul>
  <li>자바스크립트 모듈 로더 라이브러리(AMD, Commons JS)기능을 js 언어 자체에서 지원</li>
  <li>호출되기 전까지는 코드 실행과 동작을 하지 않는 특징이 있음</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c1">// libs/math.js</span>
<span class="k">export</span> <span class="kd">function</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">export</span> <span class="kd">var</span> <span class="nx">pi</span> <span class="o">=</span> <span class="mf">3.141593</span><span class="p">;</span>

<span class="c1">// main.js</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sum</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">libs/math.js</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>자바스크립트는 모듈화 방법이 없었기 때문에 모듈 로더 라이브러리를 사용함</p>

<p>모듈 : 특정기능을 수행하는 한 단위, 묶음
모듈화 이유 : 재사용성이 뛰어난 기능을 묶어서 다시 가져다 쓰기 위해서</p>

<p>Vue.js에서 가장 많이 보이는 <code class="language-plaintext highlighter-rouge">export default</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="c1">// util.js</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// main.js</span>
<span class="k">import</span> <span class="nx">util</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">util.js</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">util</span><span class="p">);</span> <span class="c1">// function (x) { return console.log(x); }</span>
<span class="nx">util</span><span class="p">(</span><span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// app.js</span>
<span class="k">import</span> <span class="nx">log</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">util.js</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">log</span><span class="p">);</span>
<span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">hi</span><span class="dl">'</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET
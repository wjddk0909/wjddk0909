I"|	<h2 id="61-동적-라우트-매칭-원리-및-적용">6.1 동적 라우트 매칭 원리 및 적용</h2>

<p>Dynamic Route Matching</p>
<ul>
  <li>파라미터에 값을 넘겨주고 그 정보를 가지고 페이지를 이동한다.</li>
  <li>router에 UserView.vue 컴포넌트 추가</li>
  <li>아이디를 클릭했을때 그 값을 어떻게 넘겨서 각 회원 상세페이지를 보여줄까..? <code class="language-plaintext highlighter-rouge">path에 /user/:id</code></li>
  <li><code class="language-plaintext highlighter-rouge">router-link</code>를 사용한다.</li>
</ul>

<blockquote>
  <p><a href="https://github.com/wjddk0909/vue-news/commit/320803e3759da42445e15c713f151a50e2fb46e0">diff check</a></p>
</blockquote>

<h2 id="62-라우터-params을-이용한-user-상세-페이지-구현">6.2 라우터 params을 이용한 User 상세 페이지 구현</h2>

<p>news라우트에서 user 이름 클릭시 user 정보 상세페이지 구현</p>
<ul>
  <li>동적라우트 매칭으로 params를 받아왔고 그것을 이용해서 api를 호출</li>
  <li>UserView.vue에서 user정보 가져오는 api를 호출 할 수도 있지만 스토어를 사용</li>
</ul>

<ol>
  <li>api/index.js &gt; fetchUserInfo에 user정보 가져오는 로직 넣기</li>
  <li>NewsView에서 클릭한 user이름으로 /user/${item.user} router-link를 통해서 이동</li>
  <li>UserView에서는 $route안의 params.id값을 const userName에 넣어주고 this.$store.dispatch를 통해서 actions에 있는 FETCH_USER에 접근하고 두번째 인자로 클릭한 username을 넘겨준다.</li>
  <li>actions(비동기처리)에서 context를 첫번째 인자로 넘겨서 mutations에 접근할 수 있도록 하고 UserView에서 넘겨받은 username을 받도록 두번째 인자에 name을 넣어준다.</li>
  <li>user정보 가져오는 함수 fetchUserInfo를 실행하고 인자로 name을 넘겨준다.</li>
  <li>commit으로 SET_USER를 실행한다.</li>
  <li>mutations에서 state에 접근해서 user에 비동기로 받아온 데이터를 넣어서 state를 바꾼다.</li>
  <li>UserView에서 화면에 데이터를 뿌려준다.</li>
</ol>

<blockquote>
  <p><a href="https://github.com/wjddk0909/vue-news/commit/a2d462fc29978f9f39e16f5bbc7c46d0d0ebf947">diff check</a></p>
</blockquote>
:ET
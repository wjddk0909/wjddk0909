I"<h2 id="vuex-기본구조">vuex 기본구조</h2>

<p><img src="/assets/images/vue-study/vuex1_1.png" alt="vuex" /></p>

<h2 id="vuex-흐름">vuex 흐름</h2>

<ol>
  <li>store 생성 : 통합 저장소</li>
</ol>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Vuex</span><span class="p">.</span><span class="nx">Store</span><span class="p">({</span>
  <span class="na">state</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">count</span><span class="p">:</span> <span class="mi">0</span>
  <span class="p">},</span>
  <span class="na">getters</span><span class="p">:</span> <span class="p">{},</span>
  <span class="na">actions</span><span class="p">:</span> <span class="p">{},</span>
  <span class="na">mutations</span><span class="p">:</span> <span class="p">{}</span>
<span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>Vuex를 Vue 컴포넌트에 가져오기</li>
</ol>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c1">// 'Counter' 컴포넌트를 만듭니다</span>
<span class="kd">const</span> <span class="nx">Counter</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">template</span><span class="p">:</span> <span class="s2">`&lt;div&gt;8&lt;/div&gt;`</span><span class="p">,</span>
  <span class="na">computed</span><span class="p">:</span> <span class="p">{</span>
    <span class="nx">count</span> <span class="p">()</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">store</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">count</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ol>
  <li>getters</li>
</ol>

<p>Vuex는 <code class="language-plaintext highlighter-rouge">getters</code>를 store 안에 정의하는것을 허락
<code class="language-plaintext highlighter-rouge">getters</code>는 저장소 <code class="language-plaintext highlighter-rouge">state</code>의 값을 기반으로 <code class="language-plaintext highlighter-rouge">state</code>의를 계산해야 할 때 사용
<code class="language-plaintext highlighter-rouge">computed</code> 속성처럼 getter의 결과는 종속성(dependencies)에 따라 캐쉬되고, 일부 종속성이 변경된 경우에만 다시 재계산</p>

<p>속성유형 접근 방법</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Vuex</span><span class="p">.</span><span class="nx">Store</span><span class="p">({</span>
  <span class="na">state</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">todos</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">text</span><span class="p">:</span> <span class="dl">'</span><span class="s1">...</span><span class="dl">'</span><span class="p">,</span> <span class="na">done</span><span class="p">:</span> <span class="kc">true</span> <span class="p">},</span>
      <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="na">text</span><span class="p">:</span> <span class="dl">'</span><span class="s1">...</span><span class="dl">'</span><span class="p">,</span> <span class="na">done</span><span class="p">:</span> <span class="kc">false</span> <span class="p">}</span>
    <span class="p">]</span>
  <span class="p">},</span>
  <span class="na">getters</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 첫 번째 전달 인자로 상태(state)를 받음</span>
    <span class="na">doneTodos</span><span class="p">:</span> <span class="nx">state</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">state</span><span class="p">.</span><span class="nx">todos</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">todo</span> <span class="o">=&gt;</span> <span class="nx">todo</span><span class="p">.</span><span class="nx">done</span><span class="p">)</span>
    <span class="p">},</span>
    <span class="c1">// state와 다른 getter도 받을 수 있습니다.</span>
    <span class="na">doneTodosCount</span><span class="p">:</span> <span class="p">(</span><span class="nx">state</span><span class="p">,</span> <span class="nx">getters</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">getters</span><span class="p">.</span><span class="nx">doneTodos</span><span class="p">.</span><span class="nx">length</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><a href="https://tofusand-dev.tistory.com/7">참고페이지</a></p>
:ET
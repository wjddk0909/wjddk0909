I"y><h2 id="21-vue는-무엇인가">2.1 vue는 무엇인가?</h2>

<p>MVVM패턴의 뷰모델(ViewModel) 레이어에 해당하는 화면(View)단 라이브러리</p>

<p>View라고 되어 있는 것은 브라우저에서 사용자에게 비춰지는 화면을 의미한다.<br />
즉, 버튼이나 입력박스등이 해당한다.</p>

<p>사용자가 키보드로 입력했을때 이벤트를 중간에 DOM Listener로 view에서 읽게 됩니다.
그런 이벤트를 잡아서 데이터를 바꾸거나 특정 로직에서 실행을 합니다.</p>

<p>자바스크립트의 데이터가 변했을때 Data Bindings를 하게 됩니다.
그리고 Data Bindings를 이용해서 화면에 반영합니다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner2_1.png" alt="vue란" /></p>

<h2 id="22-기존-웹-개발-방식html-javascript">2.2 기존 웹 개발 방식(HTML, Javascript)</h2>

<p>일반적으로 프레임워크를 쓰지 않고 웹을 개발하는 방법은 HTML, CSS, Javascript를 사용합니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Hello World</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">div</span><span class="p">);</span>
    <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">str</span><span class="p">;</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이렇게 작성하고 브라우저에서 확인을 하면 브라우저에서 확인 할 수 있습니다.</p>

<p><img src="/assets/images/vue/vue-lv1/beginner2_2.png" alt="html1" /></p>

<p>html은 화면에 나타나는 태그나 돔의 정보를 넣는 것 이고 자바스크립트는 해당 태그나 돔의 내용을 조작하는 것을 알 수 있습니다.</p>

<p>여기에서 str의 값을 바꿀때는 바뀐 문자열의 내용을 다시 넣어줘야 합니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Hello World</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">div</span><span class="p">);</span>
    <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">str</span><span class="p">;</span>

    <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Hello World!!!</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">str</span><span class="p">;</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="23-reactivity-구현">2.3 Reactivity 구현</h2>

<p>기존의 개발 방식에서 vue.js의 핵심 기능인 Reactivity를 이용해보겠습니다.</p>

<p>div정보만 받아놓은 상태에서 viewModel이라는 객체를 선언하고<br />
Object.defineProperty()라는 api를 사용해보겠습니다.</p>

<p>Object.defineProperty()가 하는 역할은 객체의 동작을 재정의 하는 api라고 보시면 됩니다.<br />
변수 a에 10을 할당하면 a에 접근 할 수 있습니다. 혹은 a를 20으로 바꿀 수 있습니다.
특정 변수, 객체의 속성 동작을 재정의 하는것이 Object.defineProperty() 입니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">viewModel</span> <span class="o">=</span> <span class="p">{};</span>

    <span class="c1">// Object.defineProperty(대상객체, 객체의 속성, {</span>
         
    <span class="c1">// });</span>

    <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">viewModel</span><span class="p">,</span> <span class="dl">'</span><span class="s1">str</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
        <span class="c1">// 속성의 접근했을 때의 동작을 정의</span>
        <span class="na">get</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">접근</span><span class="dl">'</span><span class="p">);</span>
        <span class="p">},</span>
        <span class="c1">// 속성에 값을 할당했을 때의 동작을 정의</span>
        <span class="na">set</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">newValue</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">할당</span><span class="dl">'</span><span class="p">,</span> <span class="nx">newValue</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>콘솔창에서 확인을 해봅시다.
<img src="/assets/images/vue/vue-lv1/beginner2_3.png" alt="vue1" /></p>

<p>여기에서 str의 값이 바뀌면 바뀐 값을 화면에 뿌리도록 정의 할 수 있습니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">viewModel</span> <span class="o">=</span> <span class="p">{};</span>

    <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">viewModel</span><span class="p">,</span> <span class="dl">'</span><span class="s1">str</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
        <span class="na">get</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">접근</span><span class="dl">'</span><span class="p">);</span>
        <span class="p">},</span>
        <span class="na">set</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">newValue</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">할당</span><span class="dl">'</span><span class="p">,</span> <span class="nx">newValue</span><span class="p">);</span>
            <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">newValue</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/vue/vue-lv1/beginner2_4.png" alt="vue2" /></p>

<p>값을 바꿀 때마다 화면이 바뀌는 것을 확인 할 수 있습니다.<br />
vue의 핵심은 데이터의 변화를 라이브러리에서 감지해서 알아서 화면을 자동으로 그려주는 Reactivity입니다.</p>

<h2 id="24-reactivity-코드-라이브러리화-하기">2.4 Reactivity 코드 라이브러리화 하기</h2>

<p>코드를 라이브러리화 해보겠습니다.<br />
init()이라는 함수안에 Object.defineProperty를 잘라서 넣습니다.<br />
render()함수를 만들어서 div에 텍스트 값을 바꾸는 부분을 옮기고 set에서 render()를 호출해서 새로운 값이 할당 됐을때 render()에 넘겨주도록 합니다.<br />
그리고 최종적으로 <a href="https://developer.mozilla.org/ko/docs/Glossary/IIFE">즉시실행</a> 함수 안에 넣어줍니다.<br />
즉시실행 함수의 역할은 기본적으로 애플리케이션의 로직에 노출되지 않도록 또다른 유효범위(스코프)에 넣어주는 것입니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
    <span class="kd">var</span> <span class="nx">div</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">viewModel</span> <span class="o">=</span> <span class="p">{};</span>

    <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
            <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">viewModel</span><span class="p">,</span> <span class="dl">'</span><span class="s1">str</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
                <span class="na">get</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">접근</span><span class="dl">'</span><span class="p">);</span>
                <span class="p">},</span>
                <span class="na">set</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">newValue</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">할당</span><span class="dl">'</span><span class="p">,</span> <span class="nx">newValue</span><span class="p">);</span>
                    <span class="nx">render</span><span class="p">(</span><span class="nx">newValue</span><span class="p">)</span>
                <span class="p">}</span>
            <span class="p">});</span>
        <span class="p">}</span>
        <span class="kd">function</span> <span class="nx">render</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">div</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">value</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">init</span><span class="p">();</span>
    <span class="p">})();</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="25-hello-vuejs와-뷰-개발자-도구">2.5 Hello Vue.js와 뷰 개발자 도구</h2>

<p>간단하게 뷰로 Hello Vue.js를 화면에 찍어 보겠습니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"app"</span><span class="nt">&gt;</span>
    
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
    <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
        <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">data</span><span class="p">:</span> <span class="p">{</span>
            <span class="na">message</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Hello Vue.js</span><span class="dl">'</span>
        <span class="p">}</span>
    <span class="p">})</span>
<span class="nt">&lt;/script&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET